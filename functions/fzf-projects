# -*- mode: sh -*-

# fzf-projects
# author: Seong Yong-ju <sei40kr@gmail.com>

: "${FZF_PROJECT_PROJECT_DIR_MAX_DEPTH:=2}"

__fzf-projects_list-projects() {
    # List known projects
    for project in "${FZF_PROJECTS_KNOWN_PROJECTS[@]}"; do
        if [[ -d "$project" ]]; then
            echo "$project"
        fi
    done

    # List projects under workspaces
    find -L "${FZF_PROJECTS_WORKSPACE_DIRS[@]}" \
         -maxdepth "$(($FZF_PROJECTS_PROJECT_DIR_MAX_DEPTH+1))" \
         -type d \
         -name '.git' \
         -exec dirname {} +
}

__fzf-projects_replace-home-with-tilda() {
    while read -r dir; do
        if [[ "$dir" == "${HOME}"* ]]; then
            echo "~${dir:${#HOME}}"
        else
            echo "$dir"
        fi
    done
}

__fzf-projects_replace-tilda-with-home() {
    read -r dir

    if [[ "$dir" == '~'* ]]; then
        echo "${HOME}${dir:1}"
    else
        echo "$dir"
    fi
}

fzf-projects() {
    if [[ "${#FZF_PROJECTS_WORKSPACE_DIRS}" == 0 ]]; then
        echo 'FZF_PROJECTS_WORKSPACE_DIRS is empty. Aborting.' >&2
        exit 1
    fi

    __fzf-projects_list-projects | \
        __fzf-projects_replace-home-with-tilda | \
        eval "fzf --prompt='Project to open: ' ${FZF_DEFAULT_OPTS}" |
        __fzf-projects_replace-tilda-with-home |
        read -r project_root

    if [[ -z "$project_root" ]]; then
        zle reset-prompt
        return
    fi

    # if tmux is not running
    if [[ -z "$TMUX" ]]; then
        BUFFER="cd $(printf '%q' "$project_root")"
        zle accept-line
        return
    fi

    local project_id="$(basename "$project_root" | tr -d '.')"
    local current_session_id="$(tmux display-message -p '#S')"

    # if current project is selected
    if [[ "$current_session_id" == "$project_id" ]]; then
        # if working directory is not under the project root
        if [[ "$PWD" != "$project_root" && "$PWD" != "$project_root"/* ]]; then
            BUFFER="cd $(printf '%q' "$project_root")"
            zle accept-line
        fi

        return
    fi

    # switch to the session if exists
    tmux switch-client -t "$project_id" 2>/dev/null
    # if the session has already existed
    if [[ "$?" == 0 ]]; then
        return
    fi

    # if current session has no name
    if [[ "$current_session_id" == <-> ]]; then
        tmux rename-session -t "$current_session_id" -- "$project_id"
        BUFFER="cd $(printf '%q' "$project_root")"
        zle accept-line

        return
    fi

    tmux new-session -dc "$project_root" -s "$project_id"
    tmux switch-client -t "$project_id"
}

fzf-projects "$@"
